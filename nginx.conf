worker_processes auto;
error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    limit_req_status 429;
    limit_conn_status 429;

    # Security & hardening
    server_tokens off;
    ignore_invalid_headers on;
    if_modified_since exact;
    etag on;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Send logs to container stdout/stderr
    access_log /dev/stdout main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # Tight timeouts reduce slowloris-style attack surface
    client_header_timeout 10s;
    client_body_timeout 10s;
    send_timeout 10s;
    keepalive_timeout 15s;
    reset_timedout_connection on;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Basic DoS protection: rate and connection limiting per client IP
    limit_req_zone $binary_remote_addr zone=req_per_ip:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_per_ip:10m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Security headers (defaults; location blocks may add more)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Only send HSTS when served over HTTPS
    map $scheme $hsts_header {
        default "max-age=31536000; includeSubDomains; preload";
        http    "";
    }

    server {
        listen 3000;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Enforce per-IP connection limit (helps against abusive clients)
        limit_conn conn_per_ip 20;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Strict-Transport-Security $hsts_header always;

            # Per-IP rate limit for static requests
            limit_req zone=req_per_ip burst=10 nodelay;
        }

        # Handle SPA routing (if needed)
        location / {
            try_files $uri $uri/ /index.html;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Strict-Transport-Security $hsts_header always;

            # Per-IP rate limit for dynamic/file-not-found hits
            limit_req zone=req_per_ip burst=10 nodelay;
        }

        # Do not cache HTML to avoid stale SPA shell
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Strict-Transport-Security $hsts_header always;
        }

        # Health check endpoint
        location /healthz {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 